defmodule Waiter do

  # Kan {a1, a2} och {b1, b2} pinnarna användas samtidigt?
  def check_sticks({_, {a1, a2}}, {_, {b1, b2}}) do
    if ((a1 == b1 || b2) || (a2 == b1 || b2)) do
      :no
    else
      :ok
    end
  end

  def no_eat([]) do
    receive do
      {:eat, left, right, pid} ->
	one_eat([], {{left, right}, pid})
    end
  end
  
  def one_eat([], {sticks1, pid1} = eat1) do
    receive do
      {:done, pid1} -> # pid1 klar
	no_eat([])
      {:eat, left, right, pid} -> # ny vill äta
	case check_sticks(sticks, {left, right}) do
	  :no ->
	    one_eat([{{left, right}, pid}], eat1) # lägg p kön
	  :yes ->
	    two_eat([], eat1, {{left, right}, pid}) # Lägg så den äter
	end
    end
  end
    
  def two_eat([], {sticks1, pid1} = eat1, {sticks2, pid2} = eat2) do
    receive do
      
  end

  def no_eat([h | t]) do
  end
  def one_eat([h | t], eat1) do
  end
  def two_eat([h | t], eat1, eat2) do
  end
    
end
  